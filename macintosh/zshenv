# History management.
HISTFILE=${ZDOTDIR:-$HOME}/.zsh_history
HIST_STAMPS="mm/dd/yyyy"
SAVEHIST=10000
HISTSIZE=10000
# Set max bash history size.
setopt EXTENDED_HISTORY
# share history across multiple zsh sessions
setopt SHARE_HISTORY
# append to history
setopt APPEND_HISTORY
# adds commands as they are typed, not at shell exit
setopt INC_APPEND_HISTORY
# expire duplicates first
setopt HIST_EXPIRE_DUPS_FIRST
# do not store duplications
setopt HIST_IGNORE_DUPS
#ignore duplicates when searching
setopt HIST_FIND_NO_DUPS
# removes blank lines from history
setopt HIST_REDUCE_BLANKS

# setup git env variables so the branch name will show up in bash prompt.
uname=`uname`
case $uname in
    Darwin)
        source /Applications/Xcode.app/Contents/Developer/usr/share/git-core/git-prompt.sh
        ;;
    Linux)
        source /etc/bash_completion.d/git
        ;;
    *)
        echo "Unknown platform ${uname}. Fail to set git branch env var..."
        ;;
esac

# Case insensitive globbing.
setopt NO_CASE_GLOB
setopt GLOB_COMPLETE

# Colors. 0; => light scene 1; => dark scene.
BLACK="\e[1:30m"
BLUE="\e[1;34m"
CYAN="\e[1;36m"
GREEN="\e[1;32m"
RED="\e[1;31m"
PURPLE="\e[1;35m"
BROWN="\e[1;33m"

COLOREND="\e[0m"

export CLICOLOR=1
export LSCOLORS=ExFxBxDxCxegedabagacad

# Ignore history by adding heading space.
export HISTIGNORE=' *'
# Set JAVA_HOME.
export JAVA_HOME=$(/usr/libexec/java_home)

#
# Alias
#
alias lr='ls -R | grep ":$" | sed -e '\''s/:$//'\'' -e '\''s/[^-][^\/]*\//--/g'\'' -e '\''s/^/   /'\'' -e '\''s/-/|/'\'' | less'
alias rm='my_rm_wrapper'
# git formaated log with colors.
alias gl="git log --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit"
alias gs="git status"
# clear shortcut
alias c='clear'
# Screen
alias sc="screen -S"
alias sl="screen -ls"
alias sr="screen -r"
# Backing out of the current directory.
setopt AUTO_CD  # Support ``..`
alias ...='cd ../../'
alias ....='cd ../../../'
alias .....='cd ../../../../'
alias ......='cd ../../../../../'

# Functions
my_rm_wrapper() {
    mv $@ ~/.trash
}

extract () {
    if [ -f $1 ] ; then
      case $1 in
        *.tar.bz2)   tar xjf $1     ;;
        *.tar.gz)    tar xzf $1     ;;
        *.bz2)       bunzip2 $1     ;;
        *.rar)       unrar e $1     ;;
        *.gz)        gunzip $1      ;;
        *.tar)       tar xf $1      ;;
        *.tbz2)      tar xjf $1     ;;
        *.tgz)       tar xzf $1     ;;
        *.zip)       unzip $1       ;;
        *.Z)         uncompress $1  ;;
        *.7z)        7z x $1        ;;
        *)     echo "'$1' cannot be extracted via extract()" ;;
         esac
     else
         echo "'$1' is not a valid file"
     fi
}

mcd() {
    mkdir -p "$1" && cd "$1";
}

authme() {
  ssh "$1" 'mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys' \
    < ~/.ssh/id_rsa.pub
}

t() {
    tail -f $1 | perl -pe "s/$2/\e[1;31;43m$&\e[0m/g"
}

# echo wrapper
myecho () {
    echo $0 `date "+%Y-%m-%d %H:%M:%S"` "$@"
}

# Dir tree display
tree () {
    if [ $# -eq 0 ]; then
    	curDir=`pwd`
    else
    	curDir=$1
    fi
    # ls -R | grep ":$" | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'
    echo $curDir
    ls -R $curDir | grep ':$' | sed -e 's/:$//' -e 's/[^-][^\/]*\//--/g' -e 's/^/   /' -e 's/-/|/'
}

# Rust.
export PATH="$HOME/.cargo/bin:$PATH"
export RUSTUP_DIST_SERVER=https://mirrors.sjtug.sjtu.edu.cn/rust-static/
